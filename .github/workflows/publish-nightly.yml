name: Publish Nightly

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]
        include:
          - os: ubuntu-18.04
            TARGET: linux

    steps:
    - name: Install Linux dependencies
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libx11-dev pkg-config libreadline-dev
    # Set up Flutter and add it to the path.
    - name: Clone Flutter repository with stable channel
      uses: actions/checkout@v2
      with:
        repository: 'flutter/flutter'
        ref: '2.0.6'
        path: 'flutter'
        fetch-depth: 0
    - name: Add Flutter to the PATH for Unix
      run: echo "$GITHUB_WORKSPACE/flutter/bin" >> $GITHUB_PATH
      if: runner.os != 'Windows'
    - name: Add Flutter to the PATH for Windows
      run: echo "${env:GITHUB_WORKSPACE}\flutter\bin" >> ${env:GITHUB_PATH}
      if: runner.os == 'Windows'
    - name: Add Dart to the PATH for Unix
      run: echo "$GITHUB_WORKSPACE/flutter/bin/cache/dart-sdk/bin" >> $GITHUB_PATH
      if: runner.os != 'Windows'
    - name: Add Dart to the PATH for Windows
      run: echo "${env:GITHUB_WORKSPACE}\flutter\bin\cache\dart-sdk\bin" >> ${env:GITHUB_PATH}
      if: runner.os == 'Windows'
    - name: Run Flutter doctor
      run: flutter doctor -v

    - name: Node and NPM Versions
      run: node -v && npm -v

    - name: Clone Hydro-SDK
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.WAVEFORM_BOT_PAT }}
        path: 'hydro'
    
    - name: Get packages for Hydro-SDK JS
      run: npm install
      working-directory: hydro

    - name: Get packages for Hydro-SDK Dart
      run: flutter pub get
      working-directory: hydro
    
    - name: Fetch Tags
      run: git fetch --all --tags
      working-directory: hydro

    - name: Configure Git Identity
      env: 
        PUBLISH_EMAIL: ${{secrets.PUBLISH_EMAIL}}
        PUBLISH_USERNAME: ${{secrets.PUBLISH_USERNAME}}
      run: |
        git config --global user.email "$PUBLISH_EMAIL"
        git config --global user.name "$PUBLISH_USERNAME"
      working-directory: hydro

    - name: Run Tsc
      shell: bash
      run: ./node_modules/.bin/tsc
      working-directory: hydro

    - name: Publish Nightly
      env:
        NPM_ORG_TOKEN: ${{secrets.NPM_ORG_TOKEN}}
      run: export NPM_TOKEN=$NPM_ORG_TOKEN; flutter pub run waveform:tagAndPublishNightly
      working-directory: hydro
      
    - name: Push Tags
      run: git push --tags
      working-directory: hydro
